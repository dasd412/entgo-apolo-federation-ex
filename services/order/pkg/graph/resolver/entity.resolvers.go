package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	"fmt"
	"order/pkg/ent"
	"order/pkg/graph/gen"
	"order/pkg/graph/gen/graphqlmodel"
)

// FindOrderByID is the resolver for the findOrderByID field.
func (r *entityResolver) FindOrderByID(ctx context.Context, id int) (*ent.Order, error) {
	return r.orderService.FindOrder(ctx, r.entClient, id)
}

// FindOrderItemByID is the resolver for the findOrderItemByID field.
func (r *entityResolver) FindOrderItemByID(ctx context.Context, id int) (*ent.OrderItem, error) {
	panic(fmt.Errorf("not implemented: FindOrderItemByID - findOrderItemByID"))
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id int) (*graphqlmodel.User, error) {
	orders, err := r.orderService.FindOrdersByUserId(ctx, r.entClient, id)

	if err != nil {
		return nil, err
	}

	return &graphqlmodel.User{
		ID:     id,
		Orders: orders,
	}, nil
}

// Entity returns gen.EntityResolver implementation.
func (r *Resolver) Entity() gen.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
