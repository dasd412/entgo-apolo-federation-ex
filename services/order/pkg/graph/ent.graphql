directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateOrderInput is used for create Order object.
Input was generated by ent.
"""
input CreateOrderInput {
  userID: Int!
  status: OrderStatus!
  totalPrice: Float!
  createdAt: Time
  orderItemIDs: [ID!]
}
"""
CreateOrderItemInput is used for create OrderItem object.
Input was generated by ent.
"""
input CreateOrderItemInput {
  productname: String!
  quantity: Int!
  price: Float!
  orderID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}
type Order implements Node @key(fields: "id") {
  id: ID!
  userID: Int!
  status: OrderStatus!
  totalPrice: Float!
  createdAt: Time!
  orderItem(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrderItems returned from the connection.
    """
    where: OrderItemWhereInput
  ): OrderItemConnection!
}
"""
A connection to a list of items.
"""
type OrderConnection {
  """
  A list of edges.
  """
  edges: [OrderEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
An edge in a connection.
"""
type OrderEdge {
  """
  The item at the end of the edge.
  """
  node: Order
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OrderItem implements Node @key(fields: "id") {
  id: ID!
  productname: String! @goField(name: "ProductName", forceResolver: false)
  quantity: Int!
  price: Float!
  order: Order
}
"""
A connection to a list of items.
"""
type OrderItemConnection {
  """
  A list of edges.
  """
  edges: [OrderItemEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrderItemEdge {
  """
  The item at the end of the edge.
  """
  node: OrderItem
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OrderItemWhereInput is used for filtering OrderItem objects.
Input was generated by ent.
"""
input OrderItemWhereInput {
  not: OrderItemWhereInput
  and: [OrderItemWhereInput!]
  or: [OrderItemWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  productName field predicates
  """
  productname: String
  productnameNEQ: String
  productnameIn: [String!]
  productnameNotIn: [String!]
  productnameGT: String
  productnameGTE: String
  productnameLT: String
  productnameLTE: String
  productnameContains: String
  productnameHasPrefix: String
  productnameHasSuffix: String
  productnameEqualFold: String
  productnameContainsFold: String
  """
  quantity field predicates
  """
  quantity: Int
  quantityNEQ: Int
  quantityIn: [Int!]
  quantityNotIn: [Int!]
  quantityGT: Int
  quantityGTE: Int
  quantityLT: Int
  quantityLTE: Int
  """
  price field predicates
  """
  price: Float
  priceNEQ: Float
  priceIn: [Float!]
  priceNotIn: [Float!]
  priceGT: Float
  priceGTE: Float
  priceLT: Float
  priceLTE: Float
  """
  order edge predicates
  """
  hasOrder: Boolean
  hasOrderWith: [OrderWhereInput!]
}
"""
OrderStatus is enum for the field status
"""
enum OrderStatus @goModel(model: "order/pkg/ent/order.Status") {
  pending
  paid
  shipped
  canceled
}
"""
OrderWhereInput is used for filtering Order objects.
Input was generated by ent.
"""
input OrderWhereInput {
  not: OrderWhereInput
  and: [OrderWhereInput!]
  or: [OrderWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  user_id field predicates
  """
  userID: Int
  userIDNEQ: Int
  userIDIn: [Int!]
  userIDNotIn: [Int!]
  userIDGT: Int
  userIDGTE: Int
  userIDLT: Int
  userIDLTE: Int
  """
  status field predicates
  """
  status: OrderStatus
  statusNEQ: OrderStatus
  statusIn: [OrderStatus!]
  statusNotIn: [OrderStatus!]
  """
  total_price field predicates
  """
  totalPrice: Float
  totalPriceNEQ: Float
  totalPriceIn: [Float!]
  totalPriceNotIn: [Float!]
  totalPriceGT: Float
  totalPriceGTE: Float
  totalPriceLT: Float
  totalPriceLTE: Float
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  order_item edge predicates
  """
  hasOrderItem: Boolean
  hasOrderItemWith: [OrderItemWhereInput!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Query {
  orders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Orders returned from the connection.
    """
    where: OrderWhereInput
  ): OrderConnection!
  orderItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrderItems returned from the connection.
    """
    where: OrderItemWhereInput
  ): OrderItemConnection!
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateOrderInput is used for update Order object.
Input was generated by ent.
"""
input UpdateOrderInput {
  userID: Int
  status: OrderStatus
  totalPrice: Float
  createdAt: Time
  addOrderItemIDs: [ID!]
  removeOrderItemIDs: [ID!]
  clearOrderItem: Boolean
}
"""
UpdateOrderItemInput is used for update OrderItem object.
Input was generated by ent.
"""
input UpdateOrderItemInput {
  productname: String
  quantity: Int
  price: Float
  orderID: ID
  clearOrder: Boolean
}
