// Code generated by ent, DO NOT EDIT.

package ent

import (
	"delivery/pkg/ent/delivery"
	"time"
)

// CreateDeliveryInput represents a mutation input for creating deliveries.
type CreateDeliveryInput struct {
	OrderID        int
	UserID         int
	Status         delivery.Status
	TrackingNumber *string
	CreatedAt      *time.Time
}

// Mutate applies the CreateDeliveryInput on the DeliveryMutation builder.
func (i *CreateDeliveryInput) Mutate(m *DeliveryMutation) {
	m.SetOrderID(i.OrderID)
	m.SetUserID(i.UserID)
	m.SetStatus(i.Status)
	if v := i.TrackingNumber; v != nil {
		m.SetTrackingNumber(*v)
	}
	if v := i.CreatedAt; v != nil {
		m.SetCreatedAt(*v)
	}
}

// SetInput applies the change-set in the CreateDeliveryInput on the DeliveryCreate builder.
func (c *DeliveryCreate) SetInput(i CreateDeliveryInput) *DeliveryCreate {
	i.Mutate(c.Mutation())
	return c
}

// UpdateDeliveryInput represents a mutation input for updating deliveries.
type UpdateDeliveryInput struct {
	OrderID             *int
	UserID              *int
	Status              *delivery.Status
	ClearTrackingNumber bool
	TrackingNumber      *string
	CreatedAt           *time.Time
}

// Mutate applies the UpdateDeliveryInput on the DeliveryMutation builder.
func (i *UpdateDeliveryInput) Mutate(m *DeliveryMutation) {
	if v := i.OrderID; v != nil {
		m.SetOrderID(*v)
	}
	if v := i.UserID; v != nil {
		m.SetUserID(*v)
	}
	if v := i.Status; v != nil {
		m.SetStatus(*v)
	}
	if i.ClearTrackingNumber {
		m.ClearTrackingNumber()
	}
	if v := i.TrackingNumber; v != nil {
		m.SetTrackingNumber(*v)
	}
	if v := i.CreatedAt; v != nil {
		m.SetCreatedAt(*v)
	}
}

// SetInput applies the change-set in the UpdateDeliveryInput on the DeliveryUpdate builder.
func (c *DeliveryUpdate) SetInput(i UpdateDeliveryInput) *DeliveryUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateDeliveryInput on the DeliveryUpdateOne builder.
func (c *DeliveryUpdateOne) SetInput(i UpdateDeliveryInput) *DeliveryUpdateOne {
	i.Mutate(c.Mutation())
	return c
}
