directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateDeliveryInput is used for create Delivery object.
Input was generated by ent.
"""
input CreateDeliveryInput {
  orderID: Int!
  userID: Int!
  status: DeliveryStatus!
  trackingNumber: String
  createdAt: Time
  deliveryItemIDs: [ID!]
}
"""
CreateDeliveryItemInput is used for create DeliveryItem object.
Input was generated by ent.
"""
input CreateDeliveryItemInput {
  productname: String!
  quantity: Int!
  price: Float!
  deliveryID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Delivery implements Node @key(fields: "id") {
  id: ID!
  orderID: Int!
  userID: Int!
  status: DeliveryStatus!
  trackingNumber: String
  createdAt: Time!
  deliveryItem(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryItems returned from the connection.
    """
    where: DeliveryItemWhereInput
  ): DeliveryItemConnection!
}
"""
A connection to a list of items.
"""
type DeliveryConnection {
  """
  A list of edges.
  """
  edges: [DeliveryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryEdge {
  """
  The item at the end of the edge.
  """
  node: Delivery
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type DeliveryItem implements Node @key(fields: "id") {
  id: ID!
  productname: String! @goField(name: "ProductName", forceResolver: false)
  quantity: Int!
  price: Float!
  delivery: Delivery
}
"""
A connection to a list of items.
"""
type DeliveryItemConnection {
  """
  A list of edges.
  """
  edges: [DeliveryItemEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryItemEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryItem
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryItemWhereInput is used for filtering DeliveryItem objects.
Input was generated by ent.
"""
input DeliveryItemWhereInput {
  not: DeliveryItemWhereInput
  and: [DeliveryItemWhereInput!]
  or: [DeliveryItemWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  productName field predicates
  """
  productname: String
  productnameNEQ: String
  productnameIn: [String!]
  productnameNotIn: [String!]
  productnameGT: String
  productnameGTE: String
  productnameLT: String
  productnameLTE: String
  productnameContains: String
  productnameHasPrefix: String
  productnameHasSuffix: String
  productnameEqualFold: String
  productnameContainsFold: String
  """
  quantity field predicates
  """
  quantity: Int
  quantityNEQ: Int
  quantityIn: [Int!]
  quantityNotIn: [Int!]
  quantityGT: Int
  quantityGTE: Int
  quantityLT: Int
  quantityLTE: Int
  """
  price field predicates
  """
  price: Float
  priceNEQ: Float
  priceIn: [Float!]
  priceNotIn: [Float!]
  priceGT: Float
  priceGTE: Float
  priceLT: Float
  priceLTE: Float
  """
  delivery edge predicates
  """
  hasDelivery: Boolean
  hasDeliveryWith: [DeliveryWhereInput!]
}
"""
DeliveryStatus is enum for the field status
"""
enum DeliveryStatus @goModel(model: "delivery/pkg/ent/delivery.Status") {
  pending
  in_transit
  delivered
}
"""
DeliveryWhereInput is used for filtering Delivery objects.
Input was generated by ent.
"""
input DeliveryWhereInput {
  not: DeliveryWhereInput
  and: [DeliveryWhereInput!]
  or: [DeliveryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  order_id field predicates
  """
  orderID: Int
  orderIDNEQ: Int
  orderIDIn: [Int!]
  orderIDNotIn: [Int!]
  orderIDGT: Int
  orderIDGTE: Int
  orderIDLT: Int
  orderIDLTE: Int
  """
  user_id field predicates
  """
  userID: Int
  userIDNEQ: Int
  userIDIn: [Int!]
  userIDNotIn: [Int!]
  userIDGT: Int
  userIDGTE: Int
  userIDLT: Int
  userIDLTE: Int
  """
  status field predicates
  """
  status: DeliveryStatus
  statusNEQ: DeliveryStatus
  statusIn: [DeliveryStatus!]
  statusNotIn: [DeliveryStatus!]
  """
  tracking_number field predicates
  """
  trackingNumber: String
  trackingNumberNEQ: String
  trackingNumberIn: [String!]
  trackingNumberNotIn: [String!]
  trackingNumberGT: String
  trackingNumberGTE: String
  trackingNumberLT: String
  trackingNumberLTE: String
  trackingNumberContains: String
  trackingNumberHasPrefix: String
  trackingNumberHasSuffix: String
  trackingNumberIsNil: Boolean
  trackingNumberNotNil: Boolean
  trackingNumberEqualFold: String
  trackingNumberContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  delivery_item edge predicates
  """
  hasDeliveryItem: Boolean
  hasDeliveryItemWith: [DeliveryItemWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Query {
  deliveries(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Deliveries returned from the connection.
    """
    where: DeliveryWhereInput
  ): DeliveryConnection!
  deliveryItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryItems returned from the connection.
    """
    where: DeliveryItemWhereInput
  ): DeliveryItemConnection!
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateDeliveryInput is used for update Delivery object.
Input was generated by ent.
"""
input UpdateDeliveryInput {
  orderID: Int
  userID: Int
  status: DeliveryStatus
  trackingNumber: String
  clearTrackingNumber: Boolean
  createdAt: Time
  addDeliveryItemIDs: [ID!]
  removeDeliveryItemIDs: [ID!]
  clearDeliveryItem: Boolean
}
"""
UpdateDeliveryItemInput is used for update DeliveryItem object.
Input was generated by ent.
"""
input UpdateDeliveryItemInput {
  productname: String
  quantity: Int
  price: Float
  deliveryID: ID
  clearDelivery: Boolean
}
