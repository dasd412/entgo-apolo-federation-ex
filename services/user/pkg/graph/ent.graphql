directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  """
  이메일
  """
  email: String!
  """
  해시화된 비밀 번호
  """
  password: String!
  """
  이름
  """
  name: String!
  """
  생성 날짜
  """
  createdAt: Time
  """
  인가 권한
  """
  role: UserRole!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  """
  이메일
  """
  email: String
  """
  해시화된 비밀 번호
  """
  password: String
  """
  이름
  """
  name: String
  """
  인가 권한
  """
  role: UserRole
}
type User @key(fields: "id") {
  id: ID!
  """
  이메일
  """
  email: String!
  """
  해시화된 비밀 번호
  """
  password: String!
  """
  이름
  """
  name: String!
  """
  생성 날짜
  """
  createdAt: Time!
  """
  인가 권한
  """
  role: UserRole!
}
"""
UserRole is enum for the field role
"""
enum UserRole @goModel(model: "user/pkg/ent/user.Role") {
  admin
  author
  guest
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  password field predicates
  """
  password: String
  passwordNEQ: String
  passwordIn: [String!]
  passwordNotIn: [String!]
  passwordGT: String
  passwordGTE: String
  passwordLT: String
  passwordLTE: String
  passwordContains: String
  passwordHasPrefix: String
  passwordHasSuffix: String
  passwordEqualFold: String
  passwordContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  role field predicates
  """
  role: UserRole
  roleNEQ: UserRole
  roleIn: [UserRole!]
  roleNotIn: [UserRole!]
}
