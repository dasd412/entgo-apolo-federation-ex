package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	"user/pkg/ent"
	"user/pkg/graph/gen"
	"user/pkg/graph/gen/graphqlmodel"
)

// FindDeliveryByUserID is the resolver for the findDeliveryByUserID field.
func (r *entityResolver) FindDeliveryByUserID(ctx context.Context, userID int) (*graphqlmodel.Delivery, error) {
	user, err := r.userService.FindUser(ctx, r.entClient, userID)
	if err != nil {
		return nil, err
	}
	return &graphqlmodel.Delivery{
		UserID: userID,
		User:   user,
	}, nil
}

// FindOrderByUserID is the resolver for the findOrderByUserID field.
func (r *entityResolver) FindOrderByUserID(ctx context.Context, userID int) (*graphqlmodel.Order, error) {
	user, err := r.userService.FindUser(ctx, r.entClient, userID)

	if err != nil {
		return nil, err
	}

	return &graphqlmodel.Order{
		UserID: userID,
		User:   user,
	}, nil
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id int) (*ent.User, error) {
	return r.userService.FindUser(ctx, r.entClient, id)
}

// Entity returns gen.EntityResolver implementation.
func (r *Resolver) Entity() gen.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
